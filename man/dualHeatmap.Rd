% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{dualHeatmap}
\alias{dualHeatmap}
\title{Heatmap function for LR scores and additional data}
\usage{
dualHeatmap(
  mat.c,
  mat.e,
  file.name = NULL,
  dend.row = NULL,
  dend.spl = NULL,
  dend.e = NULL,
  cols = NULL,
  cols.e = NULL,
  width,
  height = 6,
  pointsize = 4,
  cut.p = 0.01,
  vert.p = 0.9
)
}
\arguments{
\item{mat.c}{A matrix with the signature scores such as output by \code{scoreLRGeneSignatures()}.}

\item{mat.e}{A second matrix to feature below mat.c.}

\item{file.name}{A PDF file name.}

\item{dend.row}{A precomputed row dendrogram for \code{mat.c}.}

\item{dend.spl}{A precompute sample (column) dendrogram.}

\item{dend.e}{A precomputed row dendrogram for \code{mat.e}.}

\item{cols}{A vector of colors to use for the heatmap of \code{mat.c}.}

\item{cols.e}{A vector of colors to use for the heatmap of \code{mat.e}.}

\item{width}{PDF width.}

\item{height}{PDF height.}

\item{pointsize}{PDF pointsize.}

\item{cut.p}{Proportion of top and bottom values for thresholding.}
}
\value{
A heatmap. Since heatmap plotting tend to be slow on the screen, it is advisable to provide a
PDF file name and plot in a file (much faster).

Extreme values (top and bottom) can be replaced by global quantiles at \code{cut.p} and \code{1-cut.p}
to avoid color scales shrunk by a few outliers.

This is a convenience function that relies on the \code{ComplexHeatmap} package to propose a simple way
of representing signature scores. If more advanced features are needed or more graphic parameters
should be controled, users should implement their own function, e.g., strarting from the code
of \code{dualHeatmap()}.
}
\description{
Generate a stack of heatmaps. The top heatmap represents ligand-receptor gene signature scores,
while the bottom heatmap represents the second, user-chosen data set to feature along with gene signatures.
}
\examples{
\dontrun{
data(sdc,package="BulkSignalR")
sample.types <- rep("tumor",ncol(sdc))
sample.types[grep("^N",names(sdc),perl=TRUE)] <- "normal"
ds <- prepareDataset(sdc,sample.types)
ds <- learnParameters(ds)

# since model training takes time and it can be reused, it is advisable to save the model
save(ds,file="...",compress="bzip2")

ds.LR <- getCorrelatedLR(ds)
ds.LR <- checkReceptorSignaling(ds,ds.LR)
pairs.p <- pValuesLR(ds.LR,ds$param)
p.red.P <- reduceToPathway(pairs.p)
signatures <- getPathwayStats(p.red.P,qval.thres=0.01)
scores <- scoreLRGeneSignatures(ds,signatures,rename.by.pathway=TRUE)
data(tme.signatures,package="BulkSignalR")
tme.scores <- scoreSignatures(ds,tme.signatures)
dualHeatmap(mat.c,mat.e,"example-with-TME.pdf",width=9,height=7,pointsize=4)
}
}
